name: Build Windows single-exe and publish release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Locate project directory
        id: find_proj
        run: |
          proj=$(git ls-files '*.csproj' | head -n1 || true)
          if [ -z "$proj" ]; then
            echo "PROJECT_DIR=." >> $GITHUB_ENV
            echo "PROJECT_FILE=" >> $GITHUB_ENV
          else
            dir=$(dirname "$proj")
            echo "PROJECT_DIR=$dir" >> $GITHUB_ENV
            echo "PROJECT_FILE=$proj" >> $GITHUB_ENV
          fi

      - name: Restore (include runtime)
        working-directory: ${{ env.PROJECT_DIR }}
        run: dotnet restore --runtime win-x64

      - name: Build
        working-directory: ${{ env.PROJECT_DIR }}
        run: dotnet build --no-restore --configuration Release

      - name: Publish single-file Windows exe (win-x64)
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          dotnet publish --no-build --configuration Release -r win-x64 -o ./artifacts \
            -p:PublishSingleFile=true -p:SelfContained=true -p:IncludeAllContentForSelfExtract=true

      - name: Find published exe
        id: find_exe
        run: |
          exe=$(find "${PROJECT_DIR}/artifacts" -type f -name '*.exe' | head -n1 || true)
          if [ -z "$exe" ]; then
            echo "No exe found in ${PROJECT_DIR}/artifacts"
            exit 1
          fi
          echo "ASSET_PATH=$exe" >> $GITHUB_ENV
        env:
          PROJECT_DIR: ${{ env.PROJECT_DIR }}

      - name: Create GitHub Release (use tag name)
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: Automated Windows single-exe build for ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload exe as release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ASSET_PATH }}
          asset_name: ${{ github.ref_name }}.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
