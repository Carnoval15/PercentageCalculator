name: Build and publish release

on:
  push:
    branches: ["main", "master"]
  workflow_dispatch:

permissions:
  contents: write   # required to create releases and upload assets
  packages: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Locate project directory
        id: find_proj
        run: |
          proj=$(git ls-files '*.csproj' | head -n1 || true)
          if [ -z "$proj" ]; then
            echo "PROJECT_DIR=." >> $GITHUB_ENV
          else
            dir=$(dirname "$proj")
            echo "PROJECT_DIR=$dir" >> $GITHUB_ENV
          fi

      - name: Restore
        working-directory: PercentageCalculator
        run: dotnet restore

      - name: Build
        working-directory: PercentageCalculator
        run: dotnet build --no-restore --configuration Release

      - name: Publish
        working-directory: PercentageCalculator
        run: dotnet publish --no-build --configuration Release -o ./artifacts

      - name: Package published artifacts
        run: |
          (cd "${PROJECT_DIR}" && zip -r "${GITHUB_WORKSPACE}/publish.zip" artifacts)
        env:
          PROJECT_DIR: PercentageCalculator

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: release-${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: Automated build published by GitHub Actions
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release asset (publish.zip)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish.zip
          asset_name: publish.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
